//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 0 images.
  struct image {
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 3 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `PersonTableViewCell`.
    static let personTableViewCell: Rswift.ReuseIdentifier<PersonTableViewCell> = Rswift.ReuseIdentifier(identifier: "PersonTableViewCell")
    /// Reuse identifier `bankCardTableViewCell`.
    static let bankCardTableViewCell: Rswift.ReuseIdentifier<PersonTableViewCell> = Rswift.ReuseIdentifier(identifier: "bankCardTableViewCell")
    /// Reuse identifier `groupTableViewCell`.
    static let groupTableViewCell: Rswift.ReuseIdentifier<PersonTableViewCell> = Rswift.ReuseIdentifier(identifier: "groupTableViewCell")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 3 view controllers.
  struct segue {
    /// This struct is generated for `CardsManagerViewController`, and contains static references to 1 segues.
    struct cardsManagerViewController {
      /// Segue identifier `segue_push_card`.
      static let segue_push_card: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, CardsManagerViewController, NewCardTableViewController> = Rswift.StoryboardSegueIdentifier(identifier: "segue_push_card")
      
      /// Optionally returns a typed version of segue `segue_push_card`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func segue_push_card(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, CardsManagerViewController, NewCardTableViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.cardsManagerViewController.segue_push_card, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    /// This struct is generated for `GroupManagerViewController`, and contains static references to 1 segues.
    struct groupManagerViewController {
      /// Segue identifier `segue_push_member`.
      static let segue_push_member: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, GroupManagerViewController, GroupMemberViewController> = Rswift.StoryboardSegueIdentifier(identifier: "segue_push_member")
      
      /// Optionally returns a typed version of segue `segue_push_member`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func segue_push_member(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, GroupManagerViewController, GroupMemberViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.groupManagerViewController.segue_push_member, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    /// This struct is generated for `ViewController`, and contains static references to 3 segues.
    struct viewController {
      /// Segue identifier `segue_push_cards`.
      static let segue_push_cards: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, ViewController, CardsManagerViewController> = Rswift.StoryboardSegueIdentifier(identifier: "segue_push_cards")
      /// Segue identifier `segue_push_group`.
      static let segue_push_group: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, ViewController, GroupManagerViewController> = Rswift.StoryboardSegueIdentifier(identifier: "segue_push_group")
      /// Segue identifier `segue_push_person`.
      static let segue_push_person: Rswift.StoryboardSegueIdentifier<UIKit.UIStoryboardSegue, ViewController, NewPersonTableViewController> = Rswift.StoryboardSegueIdentifier(identifier: "segue_push_person")
      
      /// Optionally returns a typed version of segue `segue_push_cards`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func segue_push_cards(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, ViewController, CardsManagerViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.viewController.segue_push_cards, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `segue_push_group`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func segue_push_group(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, ViewController, GroupManagerViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.viewController.segue_push_group, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `segue_push_person`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func segue_push_person(segue: UIKit.UIStoryboardSegue) -> Rswift.TypedStoryboardSegueInfo<UIKit.UIStoryboardSegue, ViewController, NewPersonTableViewController>? {
        return Rswift.TypedStoryboardSegueInfo(segueIdentifier: R.segue.viewController.segue_push_person, segue: segue)
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 4 localization tables.
  struct string {
    /// This `R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      fileprivate init() {}
    }
    
    /// This `R.string.localizable` struct is generated, and contains static references to 2 localization keys.
    struct localizable {
      /// Base translation: female
      /// 
      /// Locales: Base, zh-Hans
      static let female = Rswift.StringResource(key: "female", tableName: "Localizable", bundle: R.hostingBundle, locales: ["Base", "zh-Hans"], comment: nil)
      /// Base translation: male
      /// 
      /// Locales: Base, zh-Hans
      static let male = Rswift.StringResource(key: "male", tableName: "Localizable", bundle: R.hostingBundle, locales: ["Base", "zh-Hans"], comment: nil)
      
      /// Base translation: female
      /// 
      /// Locales: Base, zh-Hans
      static func female(_: Void = ()) -> String {
        return NSLocalizedString("female", bundle: R.hostingBundle, comment: "")
      }
      
      /// Base translation: male
      /// 
      /// Locales: Base, zh-Hans
      static func male(_: Void = ()) -> String {
        return NSLocalizedString("male", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    /// This `R.string.main` struct is generated, and contains static references to 33 localization keys.
    struct main {
      /// zh-Hans translation: Female
      /// 
      /// Locales: zh-Hans
      static let qbfWn3t4SegmentTitles1 = Rswift.StringResource(key: "Qbf-wn-3t4.segmentTitles[1]", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: Male
      /// 
      /// Locales: zh-Hans
      static let qbfWn3t4SegmentTitles0 = Rswift.StringResource(key: "Qbf-wn-3t4.segmentTitles[0]", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: New Card
      /// 
      /// Locales: zh-Hans
      static let hchOc4GSTitle = Rswift.StringResource(key: "Hch-oc-4GS.title", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: New Card
      /// 
      /// Locales: zh-Hans
      static let xBZO8ZNormalTitle = Rswift.StringResource(key: "55X-bZ-O8Z.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: New Group
      /// 
      /// Locales: zh-Hans
      static let cZMQWQMNormalTitle = Rswift.StringResource(key: "6cZ-mQ-WQM.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: New Person
      /// 
      /// Locales: zh-Hans
      static let cCAG4BwrTitle = Rswift.StringResource(key: "cCA-g4-bwr.title", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: New Person
      /// 
      /// Locales: zh-Hans
      static let tEVZFYUiNormalTitle = Rswift.StringResource(key: "tEV-zF-yUi.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: New Person
      /// 
      /// Locales: zh-Hans
      static let uSmRfDHkNormalTitle = Rswift.StringResource(key: "uSm-Rf-DHk.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: Submit
      /// 
      /// Locales: zh-Hans
      static let gs7Oa7RrNormalTitle = Rswift.StringResource(key: "gs7-oa-7Rr.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: Submit
      /// 
      /// Locales: zh-Hans
      static let oWPE9EB2NormalTitle = Rswift.StringResource(key: "oWP-E9-EB2.normalTitle", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: age
      /// 
      /// Locales: zh-Hans
      static let cVR97URwText = Rswift.StringResource(key: "cVR-97-uRw.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: age
      /// 
      /// Locales: zh-Hans
      static let ka2GRXrBText = Rswift.StringResource(key: "Ka2-gR-xrB.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: age
      /// 
      /// Locales: zh-Hans
      static let tpY4KUQLText = Rswift.StringResource(key: "TpY-4K-uQL.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: age:
      /// 
      /// Locales: zh-Hans
      static let zLMNFWnText = Rswift.StringResource(key: "0zL-MN-fWn.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: bankName:
      /// 
      /// Locales: zh-Hans
      static let nhDJFPamText = Rswift.StringResource(key: "nhD-JF-pam.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: group name
      /// 
      /// Locales: zh-Hans
      static let fqN9QTxDText = Rswift.StringResource(key: "fqN-9Q-txD.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: index
      /// 
      /// Locales: zh-Hans
      static let mJ9XbOtuText = Rswift.StringResource(key: "MJ9-Xb-otu.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: index
      /// 
      /// Locales: zh-Hans
      static let pmEF5lBText = Rswift.StringResource(key: "5pm-eF-5lB.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: leader name
      /// 
      /// Locales: zh-Hans
      static let mnB2kAzrText = Rswift.StringResource(key: "mnB-2k-Azr.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: member count
      /// 
      /// Locales: zh-Hans
      static let nNiPMOfQText = Rswift.StringResource(key: "nNi-pM-ofQ.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: name
      /// 
      /// Locales: zh-Hans
      static let fCM5MRyeText = Rswift.StringResource(key: "fCM-5M-rye.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: name
      /// 
      /// Locales: zh-Hans
      static let mLJXAF96Text = Rswift.StringResource(key: "MLJ-XA-f96.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: name
      /// 
      /// Locales: zh-Hans
      static let vIgJeQT6Text = Rswift.StringResource(key: "VIg-Je-qT6.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: name:
      /// 
      /// Locales: zh-Hans
      static let yeYQDRS2Text = Rswift.StringResource(key: "yeY-qD-RS2.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: number:
      /// 
      /// Locales: zh-Hans
      static let uXQGyImaText = Rswift.StringResource(key: "uXQ-gy-Ima.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: please input bank name
      /// 
      /// Locales: zh-Hans
      static let kwVqU3KPlaceholder = Rswift.StringResource(key: "8Kw-vq-U3K.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: please input your age
      /// 
      /// Locales: zh-Hans
      static let kabCmWmnPlaceholder = Rswift.StringResource(key: "Kab-Cm-wmn.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: please input your card number
      /// 
      /// Locales: zh-Hans
      static let snrH7RTHPlaceholder = Rswift.StringResource(key: "snr-h7-RTH.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: please input your name
      /// 
      /// Locales: zh-Hans
      static let s00BVSe7Placeholder = Rswift.StringResource(key: "s00-BV-Se7.placeholder", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: sex
      /// 
      /// Locales: zh-Hans
      static let hQzG0Dq6Text = Rswift.StringResource(key: "HQz-g0-dq6.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: sex
      /// 
      /// Locales: zh-Hans
      static let qqo8wESuText = Rswift.StringResource(key: "Qqo-8w-eSu.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: sex
      /// 
      /// Locales: zh-Hans
      static let ySlLFZgLText = Rswift.StringResource(key: "ySl-lF-zgL.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      /// zh-Hans translation: sex:
      /// 
      /// Locales: zh-Hans
      static let lhUNEZWgText = Rswift.StringResource(key: "lhU-NE-ZWg.text", tableName: "Main", bundle: R.hostingBundle, locales: ["zh-Hans"], comment: nil)
      
      /// zh-Hans translation: Female
      /// 
      /// Locales: zh-Hans
      static func qbfWn3t4SegmentTitles1(_: Void = ()) -> String {
        return NSLocalizedString("Qbf-wn-3t4.segmentTitles[1]", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: Male
      /// 
      /// Locales: zh-Hans
      static func qbfWn3t4SegmentTitles0(_: Void = ()) -> String {
        return NSLocalizedString("Qbf-wn-3t4.segmentTitles[0]", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: New Card
      /// 
      /// Locales: zh-Hans
      static func hchOc4GSTitle(_: Void = ()) -> String {
        return NSLocalizedString("Hch-oc-4GS.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: New Card
      /// 
      /// Locales: zh-Hans
      static func xBZO8ZNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("55X-bZ-O8Z.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: New Group
      /// 
      /// Locales: zh-Hans
      static func cZMQWQMNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("6cZ-mQ-WQM.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: New Person
      /// 
      /// Locales: zh-Hans
      static func cCAG4BwrTitle(_: Void = ()) -> String {
        return NSLocalizedString("cCA-g4-bwr.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: New Person
      /// 
      /// Locales: zh-Hans
      static func tEVZFYUiNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("tEV-zF-yUi.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: New Person
      /// 
      /// Locales: zh-Hans
      static func uSmRfDHkNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("uSm-Rf-DHk.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: Submit
      /// 
      /// Locales: zh-Hans
      static func gs7Oa7RrNormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("gs7-oa-7Rr.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: Submit
      /// 
      /// Locales: zh-Hans
      static func oWPE9EB2NormalTitle(_: Void = ()) -> String {
        return NSLocalizedString("oWP-E9-EB2.normalTitle", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: age
      /// 
      /// Locales: zh-Hans
      static func cVR97URwText(_: Void = ()) -> String {
        return NSLocalizedString("cVR-97-uRw.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: age
      /// 
      /// Locales: zh-Hans
      static func ka2GRXrBText(_: Void = ()) -> String {
        return NSLocalizedString("Ka2-gR-xrB.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: age
      /// 
      /// Locales: zh-Hans
      static func tpY4KUQLText(_: Void = ()) -> String {
        return NSLocalizedString("TpY-4K-uQL.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: age:
      /// 
      /// Locales: zh-Hans
      static func zLMNFWnText(_: Void = ()) -> String {
        return NSLocalizedString("0zL-MN-fWn.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: bankName:
      /// 
      /// Locales: zh-Hans
      static func nhDJFPamText(_: Void = ()) -> String {
        return NSLocalizedString("nhD-JF-pam.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: group name
      /// 
      /// Locales: zh-Hans
      static func fqN9QTxDText(_: Void = ()) -> String {
        return NSLocalizedString("fqN-9Q-txD.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: index
      /// 
      /// Locales: zh-Hans
      static func mJ9XbOtuText(_: Void = ()) -> String {
        return NSLocalizedString("MJ9-Xb-otu.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: index
      /// 
      /// Locales: zh-Hans
      static func pmEF5lBText(_: Void = ()) -> String {
        return NSLocalizedString("5pm-eF-5lB.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: leader name
      /// 
      /// Locales: zh-Hans
      static func mnB2kAzrText(_: Void = ()) -> String {
        return NSLocalizedString("mnB-2k-Azr.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: member count
      /// 
      /// Locales: zh-Hans
      static func nNiPMOfQText(_: Void = ()) -> String {
        return NSLocalizedString("nNi-pM-ofQ.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: name
      /// 
      /// Locales: zh-Hans
      static func fCM5MRyeText(_: Void = ()) -> String {
        return NSLocalizedString("fCM-5M-rye.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: name
      /// 
      /// Locales: zh-Hans
      static func mLJXAF96Text(_: Void = ()) -> String {
        return NSLocalizedString("MLJ-XA-f96.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: name
      /// 
      /// Locales: zh-Hans
      static func vIgJeQT6Text(_: Void = ()) -> String {
        return NSLocalizedString("VIg-Je-qT6.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: name:
      /// 
      /// Locales: zh-Hans
      static func yeYQDRS2Text(_: Void = ()) -> String {
        return NSLocalizedString("yeY-qD-RS2.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: number:
      /// 
      /// Locales: zh-Hans
      static func uXQGyImaText(_: Void = ()) -> String {
        return NSLocalizedString("uXQ-gy-Ima.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: please input bank name
      /// 
      /// Locales: zh-Hans
      static func kwVqU3KPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("8Kw-vq-U3K.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: please input your age
      /// 
      /// Locales: zh-Hans
      static func kabCmWmnPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("Kab-Cm-wmn.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: please input your card number
      /// 
      /// Locales: zh-Hans
      static func snrH7RTHPlaceholder(_: Void = ()) -> String {
        return NSLocalizedString("snr-h7-RTH.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: please input your name
      /// 
      /// Locales: zh-Hans
      static func s00BVSe7Placeholder(_: Void = ()) -> String {
        return NSLocalizedString("s00-BV-Se7.placeholder", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: sex
      /// 
      /// Locales: zh-Hans
      static func hQzG0Dq6Text(_: Void = ()) -> String {
        return NSLocalizedString("HQz-g0-dq6.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: sex
      /// 
      /// Locales: zh-Hans
      static func qqo8wESuText(_: Void = ()) -> String {
        return NSLocalizedString("Qqo-8w-eSu.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: sex
      /// 
      /// Locales: zh-Hans
      static func ySlLFZgLText(_: Void = ()) -> String {
        return NSLocalizedString("ySl-lF-zgL.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// zh-Hans translation: sex:
      /// 
      /// Locales: zh-Hans
      static func lhUNEZWgText(_: Void = ()) -> String {
        return NSLocalizedString("lhU-NE-ZWg.text", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    /// This `R.string.stringManager` struct is generated, and contains static references to 2 localization keys.
    struct stringManager {
      /// Value: pk_index
      static let defaultKey = Rswift.StringResource(key: "default.key", tableName: "StringManager", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: request error:
      static let requestErrorInfo = Rswift.StringResource(key: "request.error.info", tableName: "StringManager", bundle: R.hostingBundle, locales: [], comment: nil)
      
      /// Value: pk_index
      static func defaultKey(_: Void = ()) -> String {
        return NSLocalizedString("default.key", tableName: "StringManager", bundle: R.hostingBundle, comment: "")
      }
      
      /// Value: request error:
      static func requestErrorInfo(_: Void = ()) -> String {
        return NSLocalizedString("request.error.info", tableName: "StringManager", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard {
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Main"
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}